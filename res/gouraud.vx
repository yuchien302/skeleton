#include "light.glsl"

uniform vec3 emission;
uniform vec3 ambient;
uniform vec3 diffuse;
uniform vec3 specular;
uniform float shininess;

varying vec4 color;

void main()
{
	vec4 world_position = gl_ModelViewMatrix * gl_Vertex;

	vec3 vertex = world_position.xyz / world_position.w;
	vec3 normal = normalize(gl_NormalMatrix * gl_Normal);
	
	color = vec4(lighting(emission, ambient, diffuse, specular, shininess, vertex, normal), 1.0);

	gl_Position = gl_ProjectionMatrix * world_position;
}